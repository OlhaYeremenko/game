<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="15" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="461" started-at="2015-05-19T17:26:40Z" finished-at="2015-05-19T17:26:41Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="461" started-at="2015-05-19T17:26:40Z" finished-at="2015-05-19T17:26:41Z">
      <class name="player.NewTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:player.NewTest@64bf091d]" name="beforeClass" is-config="true" duration-ms="2" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:player.NewTest@64bf091d]" name="f" duration-ms="0" started-at="2015-05-19T20:26:41Z" data-provider="dp" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:player.NewTest@64bf091d]" name="f" duration-ms="0" started-at="2015-05-19T20:26:41Z" data-provider="dp" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:player.NewTest@64bf091d]" name="afterClass" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="test()[pri:0, instance:player.NewTest@64bf091d]" name="test" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- player.NewTest -->
      <class name="game.GameTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:game.GameTest@33462704]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:game.GameTest@33462704]" name="f" duration-ms="0" started-at="2015-05-19T20:26:41Z" data-provider="dp" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:game.GameTest@33462704]" name="f" duration-ms="1" started-at="2015-05-19T20:26:41Z" data-provider="dp" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:game.GameTest@33462704]" name="afterClass" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- game.GameTest -->
      <class name="cities.parsers.ParserTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:cities.parsers.ParserTest@df8388a]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:cities.parsers.ParserTest@df8388a]" name="f" duration-ms="0" started-at="2015-05-19T20:26:41Z" data-provider="dp" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="parserTest()[pri:0, instance:cities.parsers.ParserTest@df8388a]" name="parserTest" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parserTest -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:cities.parsers.ParserTest@df8388a]" name="f" duration-ms="0" started-at="2015-05-19T20:26:41Z" data-provider="dp" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:cities.parsers.ParserTest@df8388a]" name="afterClass" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- cities.parsers.ParserTest -->
      <class name="game.GameHandlerTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="beforeSuite" is-config="true" duration-ms="25" started-at="2015-05-19T20:26:40Z" finished-at="2015-05-19T20:26:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:player.NewTest@64bf091d]" name="beforeTest" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:40Z" finished-at="2015-05-19T20:26:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="beforeTest" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:40Z" finished-at="2015-05-19T20:26:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:game.GameTest@33462704]" name="beforeTest" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:40Z" finished-at="2015-05-19T20:26:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:cities.parsers.ParserTest@df8388a]" name="beforeTest" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:40Z" finished-at="2015-05-19T20:26:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getFirstTest(java.lang.String, char, char)[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="getFirstTest" duration-ms="18" started-at="2015-05-19T20:26:41Z" data-provider="testCityListProvider" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[харьков]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[в]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[х]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFirstTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="afterMethod" is-config="true" duration-ms="1" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getFirstTest(java.lang.String, char, char)[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="getFirstTest" duration-ms="0" started-at="2015-05-19T20:26:41Z" data-provider="testCityListProvider" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[сумы]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[м]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[с]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFirstTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getFirstTest(java.lang.String, char, char)[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="getFirstTest" duration-ms="0" started-at="2015-05-19T20:26:41Z" data-provider="testCityListProvider" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ахтырка]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[а]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[а]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFirstTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getLastTest(java.lang.String, char, char)[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="getLastTest" duration-ms="43" started-at="2015-05-19T20:26:41Z" data-provider="testCityListProvider" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[харьков]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[в]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[х]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLastTest -->
        <test-method status="PASS" signature="getLastTest(java.lang.String, char, char)[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="getLastTest" duration-ms="1" started-at="2015-05-19T20:26:41Z" data-provider="testCityListProvider" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[сумы]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[м]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[с]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLastTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getLastTest(java.lang.String, char, char)[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="getLastTest" duration-ms="0" started-at="2015-05-19T20:26:41Z" data-provider="testCityListProvider" finished-at="2015-05-19T20:26:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ахтырка]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[а]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[а]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getLastTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="afterMethod" is-config="true" duration-ms="1" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testBD()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="testBD" duration-ms="330" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at game.GameHandlerTest.testBD(GameHandlerTest.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBD -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="afterClass" is-config="true" duration-ms="1" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="afterTest" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:cities.parsers.ParserTest@df8388a]" name="afterTest" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:game.GameTest@33462704]" name="afterTest" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:player.NewTest@64bf091d]" name="afterTest" is-config="true" duration-ms="0" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:game.GameHandlerTest@42ab91e8]" name="afterSuite" is-config="true" duration-ms="1" started-at="2015-05-19T20:26:41Z" finished-at="2015-05-19T20:26:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- game.GameHandlerTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
